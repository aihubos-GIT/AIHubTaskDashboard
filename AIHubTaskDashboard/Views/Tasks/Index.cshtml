@using System.Text.Json
@model System.Text.Json.JsonElement

@{
    var tasks = Model.ValueKind == JsonValueKind.Array ? Model.EnumerateArray() : Enumerable.Empty<JsonElement>();
    ViewBag.Title = "Quản lý Công việc";

    var currentStatus = Context.Request.Query["status"].FirstOrDefault();
    var currentAssigneeId = Context.Request.Query["assignee_id"].FirstOrDefault();
    var usersJson = ViewBag.Users as JsonElement? ?? JsonDocument.Parse("[]").RootElement;
    var users = usersJson.ValueKind == JsonValueKind.Array ? usersJson.EnumerateArray() : Enumerable.Empty<JsonElement>();

    // ✅ SỬA: Lọc bỏ user có id = 0 trước khi tạo Dictionary
    var userMap = users
        .Where(u => u.TryGetProperty("user_id", out var uid) && uid.GetInt32() != 0)
        .ToDictionary(
            u => u.GetProperty("user_id").GetInt32(),
            u => u.TryGetProperty("full_name", out var fn) ? fn.GetString() : "Unknown User"
        );
}

<h2 class="fw-bold mb-4">@ViewBag.Title</h2>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <h5 class="card-title mb-3"><i class="bi bi-filter me-2"></i> Bộ lọc Tasks</h5>
        <form method="get" asp-action="Index" class="row g-3 align-items-end">

            <div class="col-md-4">
                <label for="statusFilter" class="form-label">Trạng thái</label>
                <select name="status" id="statusFilter" class="form-select">
                    <option value="">-- Tất cả --</option>
                    @{
                        var statuses = new List<string> { "To Do", "In Progress", "Completed" };
                    }
                    @foreach (var s in statuses)
                    {
                        <option value="@s" selected="@(currentStatus == s)">@s</option>
                    }
                </select>
            </div>

            <div class="col-md-4">
                <label for="assigneeFilter" class="form-label">Người được giao</label>
                <select name="assignee_id" id="assigneeFilter" class="form-select">
                    <option value="">-- Tất cả --</option>
                    @foreach (var user in users)
                    {
                        var userId = user.TryGetProperty("user_id", out var uid) ? uid.GetInt32() : 0;
                        var fullName = user.TryGetProperty("full_name", out var fn) ? fn.GetString() : "Unknown User";

                        if (userId == 0) continue;

                        var isUserSelected = currentAssigneeId == userId.ToString();

                        <option value="@userId" selected="@isUserSelected">@fullName</option>
                    }
                </select>
            </div>

            <div class="col-md-4 d-flex">
                <button type="submit" class="btn btn-primary me-2"><i class="bi bi-search"></i> Lọc</button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary"><i class="bi bi-x-circle"></i> Xóa lọc</a>
            </div>
        </form>
    </div>
</div>
<div class="d-flex justify-content-between align-items-center mb-4">
    <h3>Danh sách Task</h3>
    <a class="btn btn-success btn-lg" href="@Url.Action("Create", "Tasks")">
        <i class="bi bi-plus-circle me-2"></i> Thêm Task
    </a>
</div>
@if (!tasks.Any())
{
    <div class="alert alert-info py-3 shadow-sm">
        <i class="bi bi-info-circle me-2"></i> Hiện tại chưa có công việc nào phù hợp với bộ lọc.
    </div>
}
else
{
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-striped mb-0 task-list-table">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 5%;">ID</th>
                            <th style="width: 35%;">Tiêu đề</th>
                            <th style="width: 10%;">Trạng thái</th>
                            <th style="width: 15%;">Người giao</th>
                            <th style="width: 10%;">Tiến độ</th>
                            <th style="width: 25%;" class="text-center">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var task in tasks)
                        {
                            var taskId = task.TryGetProperty("task_id", out var idElement) ? idElement.GetInt32() : 0;
                            var title = task.TryGetProperty("title", out var titleElement) ? titleElement.GetString() : "(Không có tiêu đề)";
                            var status = task.TryGetProperty("status", out var statusElement) ? statusElement.GetString() : "Unknown";
                            var progress = task.TryGetProperty("progress_percentage", out var progressElement) ? progressElement.GetInt32() : 0;
                            var assignerId = task.TryGetProperty("assigner_id", out var aoid) ? aoid.GetInt32() : 0;
                            var assignerName = userMap.ContainsKey(assignerId) ? userMap[assignerId] : $"User #{assignerId}";

                            // Hàm helper (cần được định nghĩa trong khối @{...} ở đầu View)
                            string GetStatusBadgeClass(string s) => s switch { "Completed" => "bg-success", "In Progress" => "bg-warning text-dark", "To Do" => "bg-info", _ => "bg-secondary" };
                            string GetProgressBarClass(int p) => p switch { int n when n == 100 => "bg-success", int n when n >= 50 => "bg-primary", _ => "bg-info" };


                            @if (taskId == 0) continue;

                            <tr>
                                <td>@taskId</td>
                                <td class="fw-semibold">@title</td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(status) p-2">@status</span>
                                </td>
                                <td>
                                    @assignerName
                                </td>
                                <td>
                                    <div class="progress" style="height: 20px;">
                                        <div class="progress-bar @GetProgressBarClass(progress)" style="width: @(progress)%">
                                            @(progress)%
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center">
                                    <a class="btn btn-sm btn-outline-primary me-2" href="@Url.Action("Edit", "Tasks", new { id = taskId })" title="Sửa Task">
                                        <i class="bi bi-pencil"></i> Sửa
                                    </a>
                                    <form method="post" asp-action="Delete" asp-controller="Tasks" style="display:inline" onsubmit="return confirm('Bạn có chắc muốn xóa task: @title không?');">
                                        <input type="hidden" name="id" value="@taskId" />
                                        <button class="btn btn-sm btn-outline-danger" type="submit" title="Xóa Task">
                                            <i class="bi bi-trash"></i> Xóa
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}